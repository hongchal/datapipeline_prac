version: '3'

x-airflow-common:
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.1}
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    ENV: ${ENV}
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW__WEBSERVER__RBAC: 'true'
    AIRFLOW__CORE__FERNET_KEY: '3r2cmsCYk-0gn_mZFC6ofGKgb84bbet8xg6igFa_Wy4='
    PYTHONPATH: '/opt/airflow'
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./config:/opt/airflow/config
    - ./sql:/opt/airflow/sql
    - ./util:/opt/airflow/util
  user: "50000:0"
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  redis:
    image: redis:6
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db upgrade
        airflow users create \
          --username ${_AIRFLOW_WWW_USER_USERNAME:-admin} \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com \
          --password ${_AIRFLOW_WWW_USER_PASSWORD:-admin}
        airflow variables import /opt/airflow/config/variables.json
        airflow connections add 'google_cloud_default' \
          --conn-type 'google_cloud_platform' \
          --conn-extra '{"extra__google_cloud_platform__project":"sixth-topic-349709","extra__google_cloud_platform__key_path":"/opt/airflow/config/gcp_service_account.json"}'
        echo "âœ… Initialization complete."
    user: "0:0"
    volumes:
      - .:/sources
      - ./config:/opt/airflow/config

  airflow-webserver:
    <<: *airflow-common
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: webserver
    ports:
      - "8083:8080"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: scheduler
    restart: always

  airflow-worker:
    <<: *airflow-common
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: celery worker
    restart: always

  airflow-triggerer:
    <<: *airflow-common
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: triggerer
    restart: always

volumes:
  postgres-db-volume:
